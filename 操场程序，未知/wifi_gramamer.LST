C51 COMPILER V9.01   WIFI_GRAMAMER                                                         08/28/2015 09:57:29 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE WIFI_GRAMAMER
OBJECT MODULE PLACED IN wifi_gramamer.OBJ
COMPILER INVOKED BY: D:\C51\BIN\C51.EXE wifi_gramamer.c BROWSE INCDIR(..\PM2.5) DEBUG OBJECTEXTEND

line level    source

   1          #include<reg52.h>
   2          #include<head_file.h>
   3          #include"string.h"
   4          #include <ctype.h>
   5          
   6          #define RX1_Lenth       32                      //串口接收缓冲长度
   7          uchar   RX1_Cnt=0;                      //接收计数
   8          bit flag=0,flag2=0;
   9          extern uchar  U8T_data_H,U8T_data_L,U8RH_data_H,U8RH_data_L,U8checkdata;//传感器采集数据的保存地方都是八位
             -数据
  10          extern float DUST_Value;
  11          uchar code fasj[]={0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39};
  12          void Delay2(unsigned long cnt)
  13          {
  14   1              long i;
  15   1              for(i=0;i<cnt*100;i++);
  16   1      }
  17          void Tranfer(uchar *s)
  18          {
  19   1         while(*s!='\0')
  20   1         {
  21   2           SBUF= toascii(*s);
  22   2               while(!TI);
  23   2               TI=0;
  24   2           s++;
  25   2               Delay2(1);
  26   2         }
  27   1      }                                                
  28          
  29          uchar idata RX1_Buffer[RX1_Lenth]=0;    //接收缓冲
  30          
  31          
  32          /* 配置wifi */
  33          void set_wifi(void)
  34          {
  35   1          Delay2(1000);
  36   1              Tranfer("AT+CWMODE=1\r\n");
  37   1              Delay2(1000);   
  38   1          Tranfer("AT+RST\r\n");      
  39   1              Delay2(1000);
  40   1              Tranfer("AT+CIPMUX=0\r\n");      //单链接
  41   1              Delay2(1000);   
  42   1          Tranfer("AT+CWJAP=\"ESP8266\",\"123456789\"\r\n");
  43   1              Delay2(3000);
  44   1              Tranfer("AT+CIFSR\r\n");        
  45   1              Delay2(500);
  46   1              Tranfer("AT+CIPSTART=\"TCP\",\"192.168.4.1\",5000\r\n");
  47   1              Delay2(2000);
  48   1              Tranfer("AT+CIPMODE=1\r\n");   //透传模式
  49   1              Delay2(1000);
  50   1              Tranfer("AT+CIPSEND\r\n");
  51   1              Delay2(1000);
  52   1      
  53   1      }
  54          
C51 COMPILER V9.01   WIFI_GRAMAMER                                                         08/28/2015 09:57:29 PAGE 2   

  55          void SendData(uint PM)
  56          {
  57   1        
  58   1       uchar a,b,c,d,e,f;
  59   1        TR0=0;
  60   1        if(U8checkdata)
  61   1                {
  62   2                 U8T_data_H%=100;
  63   2                 a=U8T_data_H/10;
  64   2                 b=U8T_data_H%10;
  65   2                 c=U8T_data_L%10;
  66   2                 U8RH_data_H%=100;
  67   2                 d=U8RH_data_H/10;
  68   2                 e=U8RH_data_H%10;
  69   2                 f=U8RH_data_L%10;
  70   2                 Delay2(5);
  71   2                 Tranfer("AT+CIPSEND\r\n");     
  72   2                 Tranfer("R5");
  73   2                 SBUF=fasj[a]; Delay2(1);
  74   2                 SBUF=fasj[b];Delay2(1);
  75   2                 SBUF=0x2e; Delay2(1);
  76   2                 SBUF=fasj[c];Delay2(1);
  77   2                 SBUF=fasj[d];Delay2(1);
  78   2                 SBUF=fasj[e];Delay2(1);
  79   2                 SBUF=0x2e; Delay2(1);
  80   2                 SBUF=fasj[f];Delay2(20);
  81   2                }
  82   1       if(PM)
  83   1       {
  84   2             PM=PM%1000;
  85   2                 Tranfer("AT+CIPSEND\r\n");
  86   2             Tranfer("R5PMA");           
  87   2                 SBUF=fasj[0]; Delay2(1);
  88   2                 SBUF=0x2e; Delay2(1);
  89   2             SBUF=fasj[PM/100]; Delay2(1);
  90   2                 SBUF=fasj[PM/10%10];Delay2(1);
  91   2                 SBUF=fasj[PM%100%10];Delay2(1);
  92   2                 PM=0;
  93   2       }
  94   1                TR0=1;
  95   1      }
  96          
  97          
  98          
  99          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    565    ----
   CONSTANT SIZE    =    167    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1      19
   IDATA SIZE       =     32    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
